c
Course.joins(:teachers).where("title LIKE ?","%算法%").or("name=?","魏峻")
Course.joins(:teachers)
c
Teacher.find_by(name:"魏峻").courses
Course.where("title LIKE ?","%算法%")
Course.where("title LIKE ?","%#{算法}%")
@searchcourses
c
@searchcourses
c
@searchcourses
searchcourses
c
@keywords
c
@keywords
c
@keywords
c
@keywords
c
 row[5].to_s.force_encoding("UTF-8")
row[5].to_s
row[5]
c
row[7].force_encoding("UTF-8").split(',')
row[7].force_encoding("UTF-8")
row[1].force_encoding("UTF-8")
row[2].force_encoding("UTF-8")
row[2].force_encode("UTF-8")
row[2].encode("UTF-8")
c
row[2].encode("UTF-8")
row[2].encode("UTF-8", "uft-8")
row[2].encode("UTF-8", "gbk")
row[2].encode("UTF-8", "Windows-1252")
row[1].encode("UTF-8", "Windows-1252")
row
q
row[2].to_s.encode("utf-8")
row[2].encode("utf-8")
row
q
row[2].encode("utf-8")
row[2].to_s.encode("utf-8")
row[2].to_s.encode("utf-8))
row[2].to_s.encode("ansi")
row[2].to_s.encode("Windows-1252")
row[2].to_s.force_encoding("UTF-8")
row[1].to_s.force_encoding("UTF-8")
row[2].force_encoding("UTF-8")
row[2]
row[1].to_s.encode('utf-8')
row[1].to_s.decode('utf-8')
row[1].to_s
row[1].to_s.encode('UTF-8')
row[0].to_s.encode('UTF-8')
q
row.to_hash["\xE5\xBA\x8F\xE5\x8F\xB7"]
row["\xE5\xBA\x8F\xE5\x8F\xB7"]
row["\xEF\xBB\xBF课程编码"]
row["课程编码"]
row
q
c
row["课程编码"]
row[1]
row[1
row
q
row.to_hash.to_s
row.to_hash
row[2]
row[1]
row[0]
row["\xEF\xBB\xBF\xE5\xBA\x8F\xE5\x8F\xB7"]
row["\xE4\xB8\xBB\xE8\xAE\xB2\xE6\x95\x99\xE5\xB8\x88"]
row['\xE4\xB8\xBB\xE8\xAE\xB2\xE6\x95\x99\xE5\xB8\x88']
row["课程编码"]
row["\xEF\xBB\xBF课程编码"]
row
q
c
row["\xEF\xBB\xBF课程名称"]
row
q
c
q
row.to_s
row['课程名称']
row
c
followed_courses
c
followed_courses
continue
@string_gain
@string_gra
@string_home
@string_diff
ave_gra
ave_home
ave_gain
@total_gain.to_f/course.comments.count
@total.gain.to_f/course.comments.count
course.comments.count
@total_gain
@ave_gain
continue
next
continue
next
@total_home
next
@total_diff
next
comment_params
continue
next
comment_params
next
comment_params
next
comment_params
next
comment_params
continue
next
comment_params
next
comment_params
continue
comment_params
continue
next
continue
next
@total_diff+comment.gain.to_i
@total_diff
total_diff
comment.difficulty.to_i
comment
continue
comment
continue
comment_params
course
continue
next
continue
course.rate
course
continue
homepage
introduction
continue
former
next
continue
next
continue
next
list=
list:
instance_variables
where
@course
c
course
coursse
c
request.url
c
page
c
q
comment_params
q
comment_params
comment_param
exit
current_user
@curcourse
